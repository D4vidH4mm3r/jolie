<?xml version="1.0" encoding="UTF-8"?>
<project name="Jolie" default="build">
	<condition property="isWindows" value="true">
		<os family="windows" />
	</condition>

	<target name="-init">
		<property name="config.dir" value="buildconfig"/>
		<property file="${config.dir}/build.properties"/>
		<property file="${config.dir}/config.properties"/>
	</target>
	<target name="-delete-old-dir" if="${install.delete_old_dir}">
		<delete dir="${install.dir}"/>
	</target>

	<target name="-install-windows-launcher" if="isWindows">
		<echo message="Installing JOLIE Windows launcher script..." />
		<echo file="${install.launcher_dir}/jolie.bat">@echo off
set joliepath=${install.dir}\
set params=%1 %2 %3 %4 %5 %6 %7 %8 %9
java -jar %joliepath%jolie.jar -l %joliepath%lib;%joliepath%javaServices\*;%joliepath%extensions\* -i %joliepath%include %params%
		</echo>
		<chmod file="${install.launcher_dir}/jolie" perm="a+x"/>
	</target>

	<target name="-install-unix-launcher" unless="isWindows">
		<echo message="Installing JOLIE Unix launcher script..." />
		<echo file="${install.launcher_dir}/jolie">#!/bin/sh

JOLIE_HOME=${install.dir}
java -Djava.rmi.server.codebase=file:/$JOLIE_HOME/extensions/rmi.jar -jar $JOLIE_HOME/jolie.jar -l $JOLIE_HOME/lib:$JOLIE_HOME/javaServices/*:$JOLIE_HOME/extensions/* -i $JOLIE_HOME/include "$@"
		</echo>
		<chmod file="${install.launcher_dir}/jolie" perm="a+x"/>

		<echo message="Installing MetaService Unix launcher script..." />
		<echo file="${install.launcher_dir}/metaservice">#!/bin/sh

JOLIE_HOME=${install.dir}
METASERVICE=$JOLIE_HOME/include/services/metaservice/metaservice.ol

print_help()
{
	echo "Usage: $0 [location [protocol]]"
	echo -e "\nExamples of valid locations are:"
	echo -e "\tsocket://localhost:9000/ (for a tcp/ip socket)"
	echo -e "\tlocalsocket:/tmp/metaservice_socket (for a local socket)"

	echo -e "\nExamples of valid protocls are:"
	echo -e "\tsodep (a fast and open-source binary protocol)"
	echo -e "\tsoap (the SOAP protocol, the standard used by Web Services)"

	echo -e "\nExample of valid invocations:"
	echo -e "\t$0 socket://localhost:9000/"
	echo -e "\t$0 socket://localhost:9100/ soap"

	echo -e "\nPlease refer to http://www.jolie-lang.org/ for a complete list of supported locations and protocols."
	echo -e "MetaService supports all of the locations and protocols provided by the JOLIE language.\n";
}

if [[ $1 = "-h" || $1 = "--help" ]]; then
	print_help
elif [[ $# = 0 ]]; then
	jolie $METASERVICE
elif [[ $# = 1 ]]; then
	jolie -C "MetaServiceLocation=\"$1\"" $METASERVICE
elif [[ $# = 2 ]]; then
	jolie -C "MetaServiceLocation=\"$1\"" -C "MetaServiceProtocol=$2" $METASERVICE
else
	print_help
fi
		</echo>
		<chmod file="${install.launcher_dir}/metaservice" perm="a+x"/>
		
		<echo message="Installing Jolie2Plasma Unix launcher script..." />
		<echo file="${install.launcher_dir}/jolie2plasma">#!/bin/sh
JOLIE_HOME=${install.dir}
java -Djava.rmi.server.codebase=file:/$JOLIE_HOME/extensions/rmi.jar -jar $JOLIE_HOME/tools/jolie2plasma.jar -l $JOLIE_HOME/lib:$JOLIE_HOME/javaServices/*:$JOLIE_HOME/extensions/* -i $JOLIE_HOME/include "$@"
		</echo>
		<chmod file="${install.launcher_dir}/jolie2plasma" perm="a+x"/>
	</target>

	<target name="install" depends="-init,-delete-old-dir">
		<copy todir="${install.dir}">
			<fileset dir="dist" />
		</copy>
		<antcall target="-install-unix-launcher" />
	        <antcall target="-install-windows-launcher" />
	</target>
	
	<target name="dist-install" depends="dist,install" />

	<target name="build">
		<antcall target="dist"/>
	</target>

	<target name="jar" depends="-init">
		<ant antfile="${project.libjolie}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.jolie}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.xsom}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.jolie-xml}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.jolie-gwt}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.http}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.btl2cap}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.rmi}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.soap}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.sodep}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.localsocket}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.metaservice-java}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.jolieJavaServices}/build.xml" inheritall="false" target="jar"/>
		<ant antfile="${project.jolie2plasma}/build.xml" inheritall="false" target="jar"/>
	</target>
	<target name="clean" depends="-init">
		<ant antfile="${project.libjolie}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.jolie}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.xsom}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.jolie-xml}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.jolie-gwt}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.http}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.btl2cap}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.rmi}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.soap}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.sodep}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.localsocket}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.metaservice-java}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.jolieJavaServices}/build.xml" inheritall="false" target="clean"/>
		<ant antfile="${project.jolie2plasma}/build.xml" inheritall="false" target="clean"/>
	</target>
	<target name="dist" depends="-init,jar">
		<delete dir="dist"/>
		<copy todir="dist" flatten="true">
			<resources>
				<file file="${project.jolie}/dist/jolie.jar"/>
			</resources>
		</copy>
		<copy todir="dist/include">
			<fileset dir="include"/>
		</copy>
		<copy todir="dist/lib" flatten="true">
			<resources>
				<file file="${project.libjolie}/dist/libjolie.jar"/>
				<file file="${project.xsom}/dist/xsom.jar"/>
				<file file="${project.jolie-xml}/dist/jolie-xml.jar"/>
				<file file="${project.jolie-gwt}/dist/jolie-gwt.jar"/>
				<file file="${project.metaservice-java}/dist/metaservice-java.jar"/>
			</resources>
		</copy>
		<copy todir="dist/extensions" flatten="true">
			<resources>
				<file file="${project.http}/dist/http.jar"/>
				<file file="${project.btl2cap}/dist/btl2cap.jar"/>
				<file file="${project.rmi}/dist/rmi.jar"/>
				<file file="${project.soap}/dist/soap.jar"/>
				<file file="${project.sodep}/dist/sodep.jar"/>
				<file file="${project.localsocket}/dist/localsocket.jar"/>
			</resources>
		</copy>
		<copy todir="dist/javaServices" flatten="true">
			<resources>
				<file file="${project.jolieJavaServices}/dist/jolieJavaServices.jar"/>
			</resources>
		</copy>
		
		<copy todir="dist/lib" flatten="true">
			<resources>
				<file file="${project.jolieJavaServices}/dist/jolieJavaServices.jar"/>
			</resources>
		</copy>
		
		<copy todir="dist/tools" flatten="true">
			<resources>
				<file file="${project.jolie2plasma}/dist/jolie2plasma.jar"/>
			</resources>
		</copy>
		
		<copy file="${libs.bluetooth}" tofile="dist/lib/bluetooth.jar"/>
		<copy file="${libs.gwt-servlet}" tofile="dist/lib/gwt-servlet.jar"/>
		<copy file="${libs.javamail.smtp}" tofile="dist/lib/smtp.jar"/>
		<copy file="${libs.javamail.mailapi}" tofile="dist/lib/mailapi.jar"/>
		<copy file="${libs.libmatthew.unix}" tofile="dist/lib/unix.jar"/>
		<copy file="${libs.relaxngDatatype}" tofile="dist/lib/relaxngDatatype.jar"/>
	</target>
</project>
